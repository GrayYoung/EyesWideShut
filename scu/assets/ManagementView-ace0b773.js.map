{"version":3,"file":"ManagementView-ace0b773.js","sources":["../../src/components/Breadcrumb.vue","../../src/views/ManagementView.vue"],"sourcesContent":["<script setup lang=\"ts\">\n  import { inject, ref, watch } from 'vue';\n  import { useRoute } from 'vue-router';\n\n  import { NavigationItem } from '@/router';\n  import { STUDENT_MENU } from '@/router/system-sudent-menu';\n  import { TITLE_KEY } from '@/title';\n\n  const menuItems: Array<NavigationItem> = STUDENT_MENU;\n  const breadcrumbs = ref<Array<NavigationItem>>(new Array(2));\n  const route = useRoute();\n  const title = inject(TITLE_KEY);\n\n  watch(\n    () => route.path,\n    (toPath) => {\n      const target: Array<NavigationItem> = new Array(2);\n\n      menuItems.some((groupItem) => {\n        target[0] = groupItem;\n        return groupItem.children!.some((item) => {\n          target[1] = item;\n          return toPath.endsWith(`/${item.path}`)\n        });\n      });\n      breadcrumbs.value = target;\n      title.value = target.map((item) => item?.label).reverse().join(' - ');\n    }, {\n      immediate: true\n    }\n  );\n</script>\n\n<template>\n  <nav class=\"p-3\" aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb mb-0\">\n      <li class=\"breadcrumb-item\" :class=\"{active: iIndex === (breadcrumbs.length - 1)}\" v-for=\"(item, iIndex) of breadcrumbs\" :key=\"iIndex\">\n        {{item?.label}}\n      </li>\n    </ol>\n  </nav>\n</template>\n\n<style lang=\"scss\" scoped>\n  nav {\n    background-color: $white;\n    font-size: $font-size-sm;\n  }\n</style>","<script setup lang=\"ts\">\n  import { finalize } from 'rxjs/operators';\n  import { inject, onMounted, ref } from 'vue';\n  import { RouterView, useLink, useRoute } from 'vue-router';\n\n  import { NavigationItem } from '@/router';\n  import { STUDENT_MENU } from '@/router/system-sudent-menu';\n  import { ISystemUser } from '@/authorization/user';\n  import { AUTH_KEY, authorizationStore } from '@/authorization/authorization';\n  import { ENV_SERVER } from '@/database/server';\n  import { StudentDatabase } from '@/database/student-database';\n  import Breadcrumb from '@/components/Breadcrumb.vue';\n\n  const menuItems: Array<NavigationItem> = STUDENT_MENU;\n  const navigations = ref<Array<NavigationItem>>(menuItems);\n  const server = inject(ENV_SERVER) as string;\n  const auth = inject(AUTH_KEY);\n  const user = authorizationStore().user;\n  const studentDatabase = new StudentDatabase(server);\n  const systemUser = ref<ISystemUser>(authorizationStore().user);\n  const logouting = ref<boolean>(false);\n  const navList = ref<HTMLSelectElement>(null);\n\n  const logout = (): void => {\n    logouting.value = true;\n    auth!.logout().pipe(\n      finalize(() => {\n        user.name = '';\n      })\n    ).subscribe(() => {}, () => {\n      logouting.value = false;\n    });\n  };\n\n  studentDatabase.getGraduationStudySource().subscribe((response) => {\n    navigations.value.some((navGroup) => {\n      return navGroup.children.some((item) => {\n        if (item.name === 'g-study') {\n          item.path = response.body.source;\n          return true;\n        }\n        return false;\n      });\n    });\n  });\n\n  onMounted((): void => {\n    const activeLink = navList.value.querySelector('a.router-link-active');\n\n    activeLink && activeLink.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest'\n    });\n  });\n</script>\n\n<template>\n  <main class=\"d-flex flex-row flex-nowrap vw-100 vh-100 p-3\">\n    <section class=\"h-100 rounded-3 overflow-hidden container-nav\" ref=\"navList\">\n      <div class=\"h-100\">\n        <header class=\"d-flex flex-row flex-nowrap sticky-top\">\n          <div class=\"avatar text-secondary\">\n            <Icon name=\"face\" />\n          </div>\n          <h2 class=\"flex-fill d-flex flex-column justify-content-center align-items-start mb-0\">\n            <span class=\"text-secondary\">{{systemUser.name}}</span>\n            <small class=\"text-muted\">{{systemUser.email}}</small>\n          </h2>\n        </header>\n        <section v-for=\"(navGroup, index) of navigations\" :key=\"index\">\n          <header>\n            <h3 class=\"mb-0 text-nowrap\">{{navGroup.label}}</h3>\n          </header>\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\" v-for=\"(navItem, iIndex) of navGroup.children\" :key=\"iIndex\">\n              <router-link class=\"nav-link text-truncate\" :to=\"'/system/' + navItem.path\" v-if=\"!!navItem.component\">\n                <Icon :name=\"navItem.icon\" v-if=\"!!navItem.icon\" />\n                <span class=\"text-nowrap\">{{navItem.label}}</span>\n               </router-link>\n               <a class=\"nav-link text-truncate\" target=\"_blank\" :href=\" navItem.path\" v-else>\n                <Icon :name=\"navItem.icon\" v-if=\"!!navItem.icon\" />\n                <span class=\"text-nowrap\">{{navItem.label}}</span>\n                </a>\n            </li>\n          </ul>\n        </section>\n      </div>\n    </section>\n    <div class=\"ps-3\"></div>\n    <section class=\"h-100 flex-fill d-flex flex-column flex-nowrap overflow-hidden container-content\">\n      <header class=\"d-flex flex-row flex-nowrap justify-content-start align-items-center rounded-3 px-3 py-2 mb-3 text-secondary\">\n        <h1 class=\"mb-0 fs-6 text-truncate\">\n          <img alt=\"\" src=\"@/assets/scu-brand.png\" height=\"32\" />\n          <span class=\"ms-2\">高等教育自学考试学生管理系统</span>\n        </h1>\n        <span class=\"flex-fill\"></span>\n        <span>\n          <button type=\"button\"\n                  class=\"btn btn-icon text-secondary\"\n                  :disabled=\"logouting\"\n                  v-tooltip\n                  data-bs-toggle=\"tooltip\"\n                  title=\"退出\"\n                  @click=\"logout()\">\n            <div class=\"spinner-grow text-primary\" role=\"status\" v-if=\"logouting\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <Icon name=\"logout\" v-else />\n          </button>\n        </span>\n      </header>\n      <div class=\"flex-fill rounded-3 overflow-auto\">\n        <Breadcrumb class=\"sticky-top\" />\n        <RouterView />\n      </div>\n    </section>\n  </main>\n</template>\n\n<style lang=\"scss\" scoped>\n  $container-bg: rgb(232, 233, 245);\n\n  main {\n    background-color: $container-bg;\n  }\n\n  .container-content {\n    > header, > div {\n      background-color: $white;\n    }\n\n    > header {\n      .btn-icon {\n        .icon {\n          font-size: 20px;\n        }\n\n        .spinner-grow {\n          width: 20px;\n          height: 20px;\n        }\n      }\n\n      img {\n        filter: invert(50%) sepia(100%) saturate(5000%) hue-rotate(340deg) brightness(95%);\n      }\n    }\n  }\n\n  .container-nav {\n    flex: 0 0 auto;\n    min-width: 14rem;\n    background-color: $white;\n\n    > div > header {\n      position: sticky;\n      top: 0;\n      left: 0;\n      padding: $nav-link-padding-y $nav-link-padding-x;\n      border-bottom: solid $border-width $border-color;\n      background-color: $white;\n\n      .avatar > .icon {\n        margin-right: 0.75rem;\n        font-size: 50px;\n      }\n\n      h2 {\n        font-size: $font-size-sm;\n      }\n    }\n\n    > div {\n      position: relative;\n      overflow-y: auto;\n      overflow-x: hidden;\n      scrollbar-gutter: stable;\n    }\n  }\n\n  section > header, .nav-item {\n    border-top: solid $border-width $border-color;\n  }\n\n  header {\n    > h3 {\n      border-left: solid 4px transparent;\n      border-right: solid 4px transparent;\n      padding: $nav-link-padding-y $nav-link-padding-x;\n      color: rgb(140, 155, 196);\n      font-size: $font-size-sm;\n      user-select: none;\n    }\n  }\n\n  .nav-link {\n    border-left: solid 4px transparent;\n    border-right: solid 4px transparent;\n    color: rgb(67, 91, 138);\n    font-size: $font-size-sm;\n\n    &.router-link-active {\n      border-left-color: $primary;\n      color: $primary;\n      background-color: $container-bg;\n    }\n\n    .icon {\n      margin-right: 0.75rem;\n      vertical-align: bottom;\n      font-size: 20px;\n    }\n  }\n</style>\n"],"names":["menuItems","STUDENT_MENU","breadcrumbs","ref","route","useRoute","title","inject","TITLE_KEY","watch","toPath","target","groupItem","item","navigations","server","ENV_SERVER","auth","AUTH_KEY","user","authorizationStore","studentDatabase","StudentDatabase","systemUser","logouting","navList","logout","finalize","response","navGroup","onMounted","activeLink"],"mappings":"kaAQE,MAAMA,EAAmCC,EACnCC,EAAcC,EAA2B,IAAI,MAAM,CAAC,CAAC,EACrDC,EAAQC,IACRC,EAAQC,EAAOC,CAAS,EAE9B,OAAAC,EACE,IAAML,EAAM,KACXM,GAAW,CACJ,MAAAC,EAAgC,IAAI,MAAM,CAAC,EAEvCX,EAAA,KAAMY,IACdD,EAAO,CAAC,EAAIC,EACLA,EAAU,SAAU,KAAMC,IAC/BF,EAAO,CAAC,EAAIE,EACLH,EAAO,SAAS,IAAIG,EAAK,MAAM,EACvC,EACF,EACDX,EAAY,MAAQS,EACdL,EAAA,MAAQK,EAAO,IAAKE,GAASA,GAAA,YAAAA,EAAM,KAAK,EAAE,QAAA,EAAU,KAAK,KAAK,CACtE,EAAG,CACD,UAAW,EACb,CAAA,q2CCfI,MAAAC,EAAcX,EADqBF,CACe,EAClDc,EAASR,EAAOS,CAAU,EAC1BC,EAAOV,EAAOW,CAAQ,EACtBC,EAAOC,EAAqB,EAAA,KAC5BC,EAAkB,IAAIC,EAAgBP,CAAM,EAC5CQ,EAAapB,EAAiBiB,EAAmB,EAAE,IAAI,EACvDI,EAAYrB,EAAa,EAAK,EAC9BsB,EAAUtB,EAAuB,IAAI,EAErCuB,EAAS,IAAY,CACzBF,EAAU,MAAQ,GAClBP,EAAM,SAAS,KACbU,EAAS,IAAM,CACbR,EAAK,KAAO,EAAA,CACb,CACH,EAAE,UAAU,IAAM,CAAA,EAAI,IAAM,CAC1BK,EAAU,MAAQ,EAAA,CACnB,CAAA,EAGH,OAAAH,EAAgB,yBAAyB,EAAE,UAAWO,GAAa,CACrDd,EAAA,MAAM,KAAMe,GACfA,EAAS,SAAS,KAAMhB,GACzBA,EAAK,OAAS,WACXA,EAAA,KAAOe,EAAS,KAAK,OACnB,IAEF,EACR,CACF,CAAA,CACF,EAEDE,EAAU,IAAY,CACpB,MAAMC,EAAaN,EAAQ,MAAM,cAAc,sBAAsB,EAErEM,GAAcA,EAAW,eAAe,CACtC,SAAU,SACV,MAAO,SAAA,CACR,CAAA,CACF"}